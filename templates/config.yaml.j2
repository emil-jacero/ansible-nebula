pki:
  # The CAs that are accepted by this node. Must contain one or more certificates created by 'nebula-cert ca'
  ca: {{ ca }}
  cert: {{ cert }}
  key: {{ key }}
{% if blocklist is defined %}
  blocklist:
  {% for hash in blocklist %}
    - "{{ hash }}"
  {% endfor %}
{% endif %}


static_host_map:
{% for host in lighthouses %}
{% if hostvars[host].nebula_ip is defined and listen.port is defined and hostvars[host].external_addr is defined %}
  "{{ hostvars[host].nebula_ip }}": ["{{ hostvars[host].external_addr }}:{{ listen.port }}"]
{% endif %}
{% endfor %}

lighthouse:
  am_lighthouse: {{ lighthouse.am_lighthouse | default("false") }}
  serve_dns: {{ lighthouse.serve_dns | default("false") }}
  interval: {{ lighthouse.interval | default("60") }}
  hosts:
{% if not 'lighthouse' in group_names %}
{% for host in lighthouses %}
  {% if hostvars[host].nebula_ip is defined %}
  - "{{ hostvars[host].nebula_ip }}"
  {% endif %}
  {% endfor %}
{% endif %}

listen:
  host: {{ listen.host }}
  port: {{ listen.port }}
  batch: {{ listen.batch | default("64") }}
  {% if listen.read_buffer is defined %}read_buffer: {{ listen.read_buffer | default("10485760") }}{% endif %}
  {% if listen.write_buffer is defined %}write_buffer: {{ listen.write_buffer | default("10485760") }}{% endif %}

punchy: {{ punchy }}
punch_back: {{ punch_back }}

{% if cipher is defined %}
cipher: {{ cipher }}
{% endif %}

{% if local_range is defined %}
local_range: "{{ local_range }}"
{% endif %}

{% if sshd is defined %}
sshd:
  enabled: {{ sshd.enabled | default("false") }}
  listen: {{ sshd.listen | default("127.0.0.1:2222") }}
  # TODO: continue setup of SSHD based connection
  #host_key: ./ssh_host_ed25519_key
  #authorized_users:
    #- user: steeeeve
      # keys can be an array of strings or single string
      #keys:
        #- "ssh public key string"
{% endif %}

tun:
  dev: nebula1
  drop_local_broadcast: false
  drop_multicast: false
  tx_queue: 500
  mtu: 1300
routes:
    #- mtu: 8800
    #  route: 10.0.0.0/16

logging:
  level: info
  format: text

#stats:
#  type: prometheus
#  listen: 127.0.0.1:8080
#  path: /metrics
#  namespace: prometheusns
#  subsystem: nebula
#  interval: 10s

# Nebula security group configuration
firewall:
  conntrack:
    tcp_timeout: 120h
    udp_timeout: 3m
    default_timeout: 10m
    max_connections: 100000

  outbound:
    # Allow all outbound traffic from this node
{% for rule in outbound %}
    - port: "{{ rule.port }}"
      proto: "{{ rule.proto }}"
      {% if rule.host is defined %}host: "{{ rule.host }}"
      {% elif rule.group is defined %}group: "{{ rule.group }}"
      {% elif rule.groups is defined %}groups:
        {% for group in rule.groups %}
        - {{ group }}
        {% endfor %}
      {% elif rule.cidr is defined %}cidr: {{ rule.cidr }}
      {% else %}
      host: any
      {% endif %}
{% endfor %}


  inbound:
{% for rule in inbound %}
    - port: "{{ rule.port }}"
      proto: "{{ rule.proto }}"
      {% if rule.host is defined %}host: "{{ rule.host }}"
      {% elif rule.group is defined %}group: "{{ rule.group }}"
      {% elif rule.groups is defined %}groups:
        {% for group in rule.groups %}
        - {{ group }}
        {% endfor %}
      {% elif rule.cidr is defined %}cidr: {{ rule.cidr }}
      {% else %}
      host: any
      {% endif %}
{% endfor %}